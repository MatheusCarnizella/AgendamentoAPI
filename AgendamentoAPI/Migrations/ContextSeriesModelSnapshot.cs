// <auto-generated />
using System;
using AgendamentoAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgendamentoAPI.Migrations
{
    [DbContext(typeof(ContextSeries))]
    partial class ContextSeriesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AgendamentoAPI.Models.Agendamento", b =>
                {
                    b.Property<int>("agendamentoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("agendamentoDia")
                        .HasColumnType("datetime2");

                    b.Property<string>("agendamentoMedico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("confirmarId")
                        .HasColumnType("int");

                    b.Property<int>("pacienteId")
                        .HasColumnType("int");

                    b.HasKey("agendamentoId");

                    b.HasIndex("confirmarId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("AgendamentoAPI.Models.ConfirmarAgendamento", b =>
                {
                    b.Property<int>("confirmarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("confirmarId"), 1L, 1);

                    b.Property<bool>("confirmarAgendamento")
                        .HasColumnType("bit");

                    b.HasKey("confirmarId");

                    b.ToTable("confirmarAgendamentos");
                });

            modelBuilder.Entity("AgendamentoAPI.Models.Paciente", b =>
                {
                    b.Property<int>("pacienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pacienteId"), 1L, 1);

                    b.Property<int>("agendamentoId")
                        .HasColumnType("int");

                    b.Property<string>("agendamentoMedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pacienteCPF")
                        .HasMaxLength(11)
                        .HasColumnType("int")
                        .IsFixedLength();

                    b.Property<DateTime>("pacienteNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("pacienteNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pacienteId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("AgendamentoAPI.Models.Agendamento", b =>
                {
                    b.HasOne("AgendamentoAPI.Models.Paciente", "Paciente")
                        .WithMany("Agendamento")
                        .HasForeignKey("agendamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgendamentoAPI.Models.ConfirmarAgendamento", "Confirmar")
                        .WithMany("Agendamento")
                        .HasForeignKey("confirmarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Confirmar");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("AgendamentoAPI.Models.ConfirmarAgendamento", b =>
                {
                    b.Navigation("Agendamento");
                });

            modelBuilder.Entity("AgendamentoAPI.Models.Paciente", b =>
                {
                    b.Navigation("Agendamento");
                });
#pragma warning restore 612, 618
        }
    }
}
